// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartTravel.BookingService.DatabaseContext;

#nullable disable

namespace SmartTravel.BookingService.Data.Migrations
{
    [DbContext(typeof(BookingServiceDbContext))]
    partial class BookingServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartTravel.Shared.Entities.BookingEntity", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BookingStatusId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("BookingStatusId");

                    b.ToTable("tblBookings", (string)null);
                });

            modelBuilder.Entity("SmartTravel.Shared.Entities.BookingStatusEnity", b =>
                {
                    b.Property<int>("BookingStatusId")
                        .HasColumnType("int");

                    b.Property<string>("BookingStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingStatusId");

                    b.ToTable("tblBookingStatuses", (string)null);
                });

            modelBuilder.Entity("SmartTravel.Shared.Entities.CarRentalEntity", b =>
                {
                    b.Property<int>("CarRentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarRentalId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CarRentalEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CarRentalStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("CarTypeId")
                        .HasColumnType("int");

                    b.Property<string>("DropOffLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickUpLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CarRentalId");

                    b.HasIndex("BookingId");

                    b.HasIndex("CarTypeId");

                    b.ToTable("tblCarRentals", (string)null);
                });

            modelBuilder.Entity("SmartTravel.Shared.Entities.CarTypeEntity", b =>
                {
                    b.Property<int>("CarTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CarTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarTypeId");

                    b.ToTable("tblCarTypes", (string)null);
                });

            modelBuilder.Entity("SmartTravel.Shared.Entities.FlightDetailEntity", b =>
                {
                    b.Property<int>("FlightDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightDetailId"));

                    b.Property<string>("ArrivalLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("DepartureLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FlightDateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FlightDateStart")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FlightPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FlightDetailId");

                    b.HasIndex("BookingId");

                    b.ToTable("tblFlightDetails", (string)null);
                });

            modelBuilder.Entity("SmartTravel.Shared.Entities.HotelDetailEntity", b =>
                {
                    b.Property<int>("HotelDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelDetailId"));

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HotelDetailName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HotelPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("HotelDetailId");

                    b.HasIndex("BookingId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("tblHotelDetails", (string)null);
                });

            modelBuilder.Entity("SmartTravel.Shared.Entities.RoomTypeEntity", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomTypeId");

                    b.ToTable("tblRoomTypes", (string)null);
                });

            modelBuilder.Entity("SmartTravel.Shared.Entities.BookingEntity", b =>
                {
                    b.HasOne("SmartTravel.Shared.Entities.BookingStatusEnity", null)
                        .WithMany()
                        .HasForeignKey("BookingStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartTravel.Shared.Entities.CarRentalEntity", b =>
                {
                    b.HasOne("SmartTravel.Shared.Entities.BookingEntity", null)
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartTravel.Shared.Entities.CarTypeEntity", null)
                        .WithMany()
                        .HasForeignKey("CarTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartTravel.Shared.Entities.FlightDetailEntity", b =>
                {
                    b.HasOne("SmartTravel.Shared.Entities.BookingEntity", null)
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartTravel.Shared.Entities.HotelDetailEntity", b =>
                {
                    b.HasOne("SmartTravel.Shared.Entities.BookingEntity", null)
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartTravel.Shared.Entities.RoomTypeEntity", null)
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
